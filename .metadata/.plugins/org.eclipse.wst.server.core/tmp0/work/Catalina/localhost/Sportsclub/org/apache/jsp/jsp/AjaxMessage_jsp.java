/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.15
 * Generated at: 2015-05-20 19:05:14 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.Date;
import java.util.Calendar;
import com.dbutil.CrudOperation;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.PreparedStatement;

public final class AjaxMessage_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=ISO-8859-1");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
 
HttpSession hs;
hs=request.getSession(false);

String ent=request.getParameter("ent");
//String ent="ankita.clash@gmail.com";
PreparedStatement ps,ps2;
ResultSet rs,rs2;
Connection con;
con=CrudOperation.createConnection();
String viewer=(String) hs.getAttribute("userinfo");
hs.setAttribute("reciever", ent);
String q="select * from  message where (senderid='"+viewer+"' or recieverid='"+viewer+"') AND (senderid='"+ent+"' OR recieverid='"+ent+"') order by timee Asc";
//System.out.println(q);
ps=con.prepareStatement(q);
rs=ps.executeQuery();


      out.write("\r\n");
      out.write("\r\n");
      out.write("<h3>view conversation between ");
      out.print(viewer );
      out.write(" and ");
      out.print(ent );
      out.write(" </h3>\r\n");
      out.write(" \r\n");
 while(rs.next())
{
	//if(!rs.getString("recieverid").equals(conv))

		
		
	Date day;
	Date time;
	day=rs.getTimestamp("timee");
	Date now=new Date();
	Calendar nowCal=Calendar.getInstance();
	Calendar thenCal=Calendar.getInstance();
thenCal.setTime(day);
//System.out.println(thenCal.get(Calendar.HOUR));

//System.out.println(thenCal.get(Calendar.HOUR_OF_DAY)-nowCal.get(Calendar.HOUR_OF_DAY)+"jkjk");

      out.write("\r\n");
      out.write("<div id=\"messagebox\" style=\"border: .9pt solid grey \">\r\n");
      out.write("<h3>");
      out.print(rs.getString("senderid") );
      out.write("</h3> <h4><tt>");
      out.print(rs.getString("message") );
      out.write("</tt></h4>\r\n");
      out.write("\r\n");
 
if(thenCal.get(Calendar.DATE)==nowCal.get(Calendar.DATE))
{
      int hour=nowCal.get(Calendar.HOUR_OF_DAY)-thenCal.get(Calendar.HOUR_OF_DAY);
        {
					if(hour==0)
					{
						int min=nowCal.get(Calendar.MINUTE)-thenCal.get(Calendar.MINUTE);
						
      out.write("\r\n");
      out.write("\t\t\t\t\t\t<h5 align=\"right\"><tt>");
      out.print(min );
      out.write(" minutes ago</tt></h5>\r\n");
      out.write("\t\t\t\t\t\t");

					}
					else{
					
      out.write("\r\n");
      out.write("\t\t      <h5 align=\"right\"><tt>today, ");
      out.print(hour );
      out.write(" hours ago</tt></h5>\r\n");
      out.write("                   \r\n");
      out.write("\t\t\t");

					}
			}
}		else{	
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<h5 align=\"right\">");
      out.print(String.format("%ta,%td %tB",day,day,day) );
      out.write('@');
      out.write(' ');
      out.print(String.format("%tI:%tM %tp",day,day,day) );
      out.write("</h5>\r\n");
} 
      out.write("\t\r\n");
      out.write("</div>\r\n");

	} 
      out.write("\r\n");
      out.write("<form action=\"/Sportsclub/ConversationMessage\" method=\"post\"><h3>New message</h3>\r\n");
      out.write("\t\t<textarea name=\"newmessage\" cols=\"80\" rows=\"5\">Write your message to ");
      out.print(ent );
      out.write("</textarea>\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t<input type=\"submit\" value=\"send\">\r\n");
      out.write("</form>\r\n");
      out.write("\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
